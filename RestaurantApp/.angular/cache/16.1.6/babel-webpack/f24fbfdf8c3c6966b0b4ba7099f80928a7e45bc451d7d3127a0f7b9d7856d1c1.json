{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  //create staff using post method\n  postRestaurant(data) {\n    return this._http.post(\"http://localhost:3000/posts\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  //get staff data using get method\n  getRestaurant() {\n    return this._http.get(\"http://localhost:3000/posts\").pipe(map(res => {\n      return res;\n    }));\n  }\n  //update staff using put method\n  updateRestaurant(data, id) {\n    return this._http.put(\"http://localhost:3000/posts/\" + id, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  //delete staff using delete method\n  deleteRestaurant(id) {\n    return this._http.delete(\"http://localhost:3000/posts/\" + id).pipe(map(res => {\n      return res;\n    }));\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","ApiService","constructor","_http","postRestaurant","data","post","pipe","res","getRestaurant","get","updateRestaurant","id","put","deleteRestaurant","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\shared\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  //create staff using post method\r\n  postRestaurant(data:any){\r\n    return this._http.post<any>(\"http://localhost:3000/posts\", data).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  //get staff data using get method\r\n  getRestaurant(){\r\n    return this._http.get<any>(\"http://localhost:3000/posts\").pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  //update staff using put method\r\n  updateRestaurant(data:any, id:number){\r\n    return this._http.put<any>(\"http://localhost:3000/posts/\"+id,data).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  //delete staff using delete method\r\n  deleteRestaurant(id:number){\r\n    return this._http.delete<any>(\"http://localhost:3000/posts/\"+id).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,UAAU;EAErBC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;EAAe;EAExC;EACAC,cAAcA,CAACC,IAAQ;IACrB,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAAM,6BAA6B,EAAED,IAAI,CAAC,CAACE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACnF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEA;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACN,KAAK,CAACO,GAAG,CAAM,6BAA6B,CAAC,CAACH,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MAC5E,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEA;EACAG,gBAAgBA,CAACN,IAAQ,EAAEO,EAAS;IAClC,OAAO,IAAI,CAACT,KAAK,CAACU,GAAG,CAAM,8BAA8B,GAACD,EAAE,EAACP,IAAI,CAAC,CAACE,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACrF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEA;EACAM,gBAAgBA,CAACF,EAAS;IACxB,OAAO,IAAI,CAACT,KAAK,CAACY,MAAM,CAAM,8BAA8B,GAACH,EAAE,CAAC,CAACL,IAAI,CAACP,GAAG,CAAEQ,GAAO,IAAG;MACnF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;;AA9BWP,UAAU,C;mBAAVA,UAAU,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVlB,UAAU,C;SAAVA,UAAU;EAAAmB,OAAA,EAAVnB,UAAU,CAAAoB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}