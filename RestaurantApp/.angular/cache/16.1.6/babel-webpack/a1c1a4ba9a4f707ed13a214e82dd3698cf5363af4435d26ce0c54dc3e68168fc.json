{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../charts-service/chart-data.service\";\nimport * as i2 from \"@angular/router\";\nexport class ChartsDashboardComponent {\n  constructor(service) {\n    this.service = service;\n    this.labeldata = [];\n    this.realdata = [];\n    this.colordata = [];\n  }\n  ngOnInit() {\n    this.service.getSalaryChartInfo().subscribe(response => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n  createChart(labeldata, realdata, colordata) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar',\n      data: {\n        labels: labeldata,\n        datasets: [{\n          label: 'Salary',\n          data: realdata,\n          backgroundColor: colordata,\n          // borderColor: 'rgba(0, 0, 0, 0.2)', // Add a border color here\n          borderWidth: 3,\n          barThickness: 40\n        }]\n      },\n      options: {\n        aspectRatio: 2\n      }\n    });\n  }\n}\nChartsDashboardComponent.ɵfac = function ChartsDashboardComponent_Factory(t) {\n  return new (t || ChartsDashboardComponent)(i0.ɵɵdirectiveInject(i1.ChartDataService));\n};\nChartsDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChartsDashboardComponent,\n  selectors: [[\"app-charts-dashboard\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"navbar\", \"navbar-light\", \"bg-dark\"], [1, \"container\", \"container-fluid\"], [1, \"d-flex\"], [\"routerLink\", \"/inventory\", 1, \"btn\", \"btn-secondary\"], [\"routerLink\", \"/menucard\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/login\", 1, \"btn\", \"btn-danger\", \"mx-3\"], [1, \"chart-container\", \"chart-border\", 2, \"position\", \"relative\", \"height\", \"60vh\", \"width\", \"120vw\"], [\"id\", \"MyChart\"]],\n  template: function ChartsDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Restaurant App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"button\", 3);\n      i0.ɵɵtext(6, \" Inventory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(7, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\u00A0\\u00A0\\u00A0\\u00A0 \");\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵtext(12, \"Logout\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵelement(14, \"canvas\", 7);\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.RouterLink],\n  styles: [\"h2[_ngcontent-%COMP%]{\\n    color:aliceblue;\\n}\\n.table1[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n.chart-border[_ngcontent-%COMP%] {\\n  border: 2px solid black; \\n\\n  padding: 10px; \\n\\n}\\n.chart-container[_ngcontent-%COMP%]\\n{\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhcnRzLWRhc2hib2FyZC9jaGFydHMtZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtFQUNFLHVCQUF1QixFQUFFLHlDQUF5QztFQUNsRSxhQUFhLEVBQUUsMkRBQTJEO0FBQzVFO0FBQ0E7OztBQUdBIiwic291cmNlc0NvbnRlbnQiOlsiaDJ7XHJcbiAgICBjb2xvcjphbGljZWJsdWU7XHJcbn1cclxuLnRhYmxlMXtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4uY2hhcnQtYm9yZGVyIHtcclxuICBib3JkZXI6IDJweCBzb2xpZCBibGFjazsgLyogU2V0IHRoZSBib3JkZXIgcHJvcGVydGllcyBhcyBkZXNpcmVkICovXHJcbiAgcGFkZGluZzogMTBweDsgLyogT3B0aW9uYWw6IEFkZCBwYWRkaW5nIHRvIGNyZWF0ZSBzcGFjZSBhcm91bmQgdGhlIGNoYXJ0ICovXHJcbn1cclxuLmNoYXJ0LWNvbnRhaW5lclxyXG57XHJcbiAgICBcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Chart","ChartsDashboardComponent","constructor","service","labeldata","realdata","colordata","ngOnInit","getSalaryChartInfo","subscribe","response","chartInfo","i","length","push","services","salary","colorcode","createChart","chart","type","data","labels","datasets","label","backgroundColor","borderWidth","barThickness","options","aspectRatio","i0","ɵɵdirectiveInject","i1","ChartDataService","selectors","decls","vars","consts","template","ChartsDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\charts-dashboard\\charts-dashboard.component.ts","E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\charts-dashboard\\charts-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartDataService } from '../charts-service/chart-data.service';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-charts-dashboard',\n  templateUrl: './charts-dashboard.component.html',\n  styleUrls: ['./charts-dashboard.component.css'],\n})\nexport class ChartsDashboardComponent implements OnInit {\n  public chart: any;\n  public chartInfo: any;\n  public labeldata: any[] = [];\n  public realdata: any[] = [];\n  public colordata: any[] = [];\n\n  constructor(public service: ChartDataService) {}\n\n  ngOnInit(): void {\n    this.service.getSalaryChartInfo().subscribe((response) => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n\n  createChart(labeldata: any, realdata: any, colordata: any) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar', // this denotes the type of chart\n      data: {\n        labels: labeldata, // x-axis\n        datasets: [\n          {\n            label: 'Salary',\n            data: realdata,\n            backgroundColor: colordata,\n            // borderColor: 'rgba(0, 0, 0, 0.2)', // Add a border color here\n            borderWidth: 3, // Set the width of the border\n            barThickness: 40,\n          },\n        ],\n      },\n      options: {\n        aspectRatio: 2,\n      },\n    });\n  }\n}\n\n//   ngOnInit(): void {\n//     this.service.getSalaryChartInfo().subscribe((response) => {\n//       this.chartInfo = response;\n//       if (this.chartInfo != null) {\n//         for (let i = 0; i < this.chartInfo.length; i++) {\n//           this.labeldata.push(this.chartInfo[i].services);\n//           this.realdata.push(this.chartInfo[i].salary);\n//           this.colordata.push(this.chartInfo[i].colorcode);\n//         }\n//         this.createChart(this.labeldata, this.realdata, this.colordata);\n//       }\n//     });\n//   }\n\n//   createChart(labeldata: any, realdata: any, colordata: any) {}\n// }\n\n// class BarChartComponent extends ChartsDashboardComponent {\n//   public constructor(public override service: ChartDataService) {\n//     super(service);\n//   }\n\n//   override createChart(labeldata: any, realdata: any, colordata: any) {\n//     this.chart = new Chart('MyChart', {\n//       type: 'bar', //this denotes the type of chart\n//       data: {\n//         labels: labeldata, //x axis\n//         datasets: [\n//           {\n//             label: 'No of sales',\n//             data: realdata,\n//             backgroundColor: colordata,\n//             barThickness: 40,\n//           },\n//         ],\n//       },\n//       options: {\n//         aspectRatio: 2,\n//       },\n//     });\n//   }\n// }\n","<!--navbar starts-->\n<nav class=\"navbar navbar-light bg-dark\">\n  <div class=\"container container-fluid\">\n    <h2>Restaurant App</h2>\n    <div class=\"d-flex\">\n      <button routerLink=\"/inventory\" class=\"btn btn-secondary\">\n        Inventory</button\n      >&nbsp;&nbsp;&nbsp;&nbsp;\n      <button routerLink=\"/menucard\" class=\"btn btn-primary\">Menu</button\n      >&nbsp;&nbsp;&nbsp;&nbsp;\n\n      <!-- <button\n        (click)=\"clickAddResto()\"\n        type=\"button\"\n        class=\"btn btn-success\"\n        data-bs-toggle=\"modal\"\n        data-bs-target=\"#exampleModal\"\n      >\n        Add Staff Member\n      </button> -->\n      <button routerLink=\"/login\" class=\"btn btn-danger mx-3\">Logout</button>\n    </div>\n  </div>\n</nav>\n<!--navbar ends-->\n\n\n<div class=\"chart-container chart-border\" style=\"position: relative; height:60vh; width:120vw\">\n    <canvas id=\"MyChart\"></canvas>\n</div>"],"mappings":"AAEA,OAAOA,KAAK,MAAM,eAAe;;;;AAOjC,OAAM,MAAOC,wBAAwB;EAOnCC,YAAmBC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;IAJnB,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,SAAS,GAAU,EAAE;EAEmB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,kBAAkB,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACC,SAAS,GAAGD,QAAQ;MACzB,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;QAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,SAAS,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAI,CAACR,SAAS,CAACU,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACG,QAAQ,CAAC;UAC/C,IAAI,CAACV,QAAQ,CAACS,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC;UAC5C,IAAI,CAACV,SAAS,CAACQ,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACK,SAAS,CAAC;;QAElD,IAAI,CAACC,WAAW,CAAC,IAAI,CAACd,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,SAAS,CAAC;;IAEnE,CAAC,CAAC;EACJ;EAEAY,WAAWA,CAACd,SAAc,EAAEC,QAAa,EAAEC,SAAc;IACvD,IAAI,CAACa,KAAK,GAAG,IAAInB,KAAK,CAAC,SAAS,EAAE;MAChCoB,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAElB,SAAS;QACjBmB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,QAAQ;UACfH,IAAI,EAAEhB,QAAQ;UACdoB,eAAe,EAAEnB,SAAS;UAC1B;UACAoB,WAAW,EAAE,CAAC;UACdC,YAAY,EAAE;SACf;OAEJ;MACDC,OAAO,EAAE;QACPC,WAAW,EAAE;;KAEhB,CAAC;EACJ;;AA3CW5B,wBAAwB,C;mBAAxBA,wBAAwB,EAAA6B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;AAAxBhC,wBAAwB,C;QAAxBA,wBAAwB;EAAAiC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRrCV,EAAA,CAAAY,cAAA,aAAyC;MAEjCZ,EAAA,CAAAa,MAAA,qBAAc;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACvBd,EAAA,CAAAY,cAAA,aAAoB;MAEhBZ,EAAA,CAAAa,MAAA,iBAAS;MAAAb,EAAA,CAAAc,YAAA,EACV;MAAAd,EAAA,CAAAa,MAAA,gCACD;MAAAb,EAAA,CAAAY,cAAA,gBAAuD;MAAAZ,EAAA,CAAAa,MAAA,WAAI;MAAAb,EAAA,CAAAc,YAAA,EAC1D;MAAAd,EAAA,CAAAa,MAAA,iCAED;MASAb,EAAA,CAAAY,cAAA,iBAAwD;MAAAZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAO7Ed,EAAA,CAAAY,cAAA,cAA+F;MAC3FZ,EAAA,CAAAe,SAAA,iBAA8B;MAClCf,EAAA,CAAAc,YAAA,EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}