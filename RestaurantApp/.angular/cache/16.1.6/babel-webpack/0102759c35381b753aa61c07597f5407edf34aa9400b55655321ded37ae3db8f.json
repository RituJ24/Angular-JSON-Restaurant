{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class InventoryApiService {\n  constructor(_http) {\n    this._http = _http;\n    this.ItemList = [];\n  }\n  //create staff using post method\n  postRestaurant(data) {\n    return this._http.post(\"http://localhost:3000/inventory\", data).pipe(map(res => {\n      return res;\n    }));\n  }\n  //get staff data using get method\n  getRestaurant() {\n    return this._http.get(\"http://localhost:3000/inventory\").pipe(map(res => {\n      return res;\n    }));\n  }\n  /*\n    getTotalAmount(){\n      return this._http.get<any>(\"http://localhost:3000/inventory\").pipe(map((res: any)=>{\n        return res;\n      }));\n    }*/\n  /*\n  getTotalAmount() : number{\n    let grandTotal = 0;\n    this.ItemList.map((a:any)=>{\n      grandTotal += a.total;\n    })\n    return grandTotal;\n  }\n  */\n  //update staff using put method\n  updateRestaurant(data, id) {\n    return this._http.put(\"http://localhost:3000/inventory/\" + id, data).pipe(map(res => {\n      return res;\n    }));\n  }\n  //delete staff using delete method\n  deleteRestaurant(id) {\n    return this._http.delete(\"http://localhost:3000/inventory/\" + id).pipe(map(res => {\n      return res;\n    }));\n  }\n}\nInventoryApiService.ɵfac = function InventoryApiService_Factory(t) {\n  return new (t || InventoryApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nInventoryApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: InventoryApiService,\n  factory: InventoryApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","InventoryApiService","constructor","_http","ItemList","postRestaurant","data","post","pipe","res","getRestaurant","get","updateRestaurant","id","put","deleteRestaurant","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\inventoryService\\inventory-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventoryApiService {\r\n  constructor(private _http:HttpClient) { }\r\n\r\n  public ItemList : any =[]\r\n\r\n  //create staff using post method\r\n  postRestaurant(data:any){\r\n    return this._http.post<any>(\"http://localhost:3000/inventory\", data).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  //get staff data using get method\r\n  getRestaurant(){\r\n    return this._http.get<any>(\"http://localhost:3000/inventory\").pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n    \r\n  }\r\n\r\n/*\r\n  getTotalAmount(){\r\n    return this._http.get<any>(\"http://localhost:3000/inventory\").pipe(map((res: any)=>{\r\n      return res;\r\n    }));\r\n  }*/\r\n\r\n  /*\r\n  getTotalAmount() : number{\r\n    let grandTotal = 0;\r\n    this.ItemList.map((a:any)=>{\r\n      grandTotal += a.total;\r\n    })\r\n    return grandTotal;\r\n  }\r\n*/\r\n\r\n\r\n  //update staff using put method\r\n  updateRestaurant(data:any, id:number){\r\n    return this._http.put<any>(\"http://localhost:3000/inventory/\"+id,data).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n  //delete staff using delete method\r\n  deleteRestaurant(id:number){\r\n    return this._http.delete<any>(\"http://localhost:3000/inventory/\"+id).pipe(map((res:any)=>{\r\n      return res;\r\n    }));\r\n  }\r\n\r\n}"],"mappings":"AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,mBAAmB;EAC9BC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAElB,KAAAC,QAAQ,GAAQ,EAAE;EAFe;EAIxC;EACAC,cAAcA,CAACC,IAAQ;IACrB,OAAO,IAAI,CAACH,KAAK,CAACI,IAAI,CAAM,iCAAiC,EAAED,IAAI,CAAC,CAACE,IAAI,CAACR,GAAG,CAAES,GAAO,IAAG;MACvF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEA;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,KAAK,CAACQ,GAAG,CAAM,iCAAiC,CAAC,CAACH,IAAI,CAACR,GAAG,CAAES,GAAO,IAAG;MAChF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EAEL;EAEF;;;;;;EAOE;;;;;;;;;EAWA;EACAG,gBAAgBA,CAACN,IAAQ,EAAEO,EAAS;IAClC,OAAO,IAAI,CAACV,KAAK,CAACW,GAAG,CAAM,kCAAkC,GAACD,EAAE,EAACP,IAAI,CAAC,CAACE,IAAI,CAACR,GAAG,CAAES,GAAO,IAAG;MACzF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;EAEA;EACAM,gBAAgBA,CAACF,EAAS;IACxB,OAAO,IAAI,CAACV,KAAK,CAACa,MAAM,CAAM,kCAAkC,GAACH,EAAE,CAAC,CAACL,IAAI,CAACR,GAAG,CAAES,GAAO,IAAG;MACvF,OAAOA,GAAG;IACZ,CAAC,CAAC,CAAC;EACL;;AAlDWR,mBAAmB,C;mBAAnBA,mBAAmB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBnB,mBAAmB,C;SAAnBA,mBAAmB;EAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}