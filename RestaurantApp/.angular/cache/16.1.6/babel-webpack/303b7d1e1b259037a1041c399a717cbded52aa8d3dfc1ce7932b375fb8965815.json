{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { InventoryData } from './inventory.model';\nexport let InventoryComponent = class InventoryComponent {\n  constructor(FormBuilder, api) {\n    this.FormBuilder = FormBuilder;\n    this.api = api;\n    this.inventoryModelObj = new InventoryData();\n    this.totalAmount = 0;\n    this.totalQuantity = 0;\n    this.items = [];\n  }\n  ngOnInit() {\n    this.inventoryForm = this.FormBuilder.group({\n      itemName: [''],\n      date: [''],\n      amount: [''],\n      quantity: ['']\n    });\n    this.getAllData();\n  }\n  clickAddResto() {\n    this.inventoryForm.reset();\n    this.showAdd = true;\n    this.showbtn = false;\n  }\n  //now subscribing our data which is map via services\n  addResto() {\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\n    this.inventoryModelObj.date = this.inventoryForm.value.date;\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\n    this.inventoryModelObj.quantity = this.inventoryForm.value.quantity;\n    this.api.postRestaurant(this.inventoryModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Records Added Successfully :)\");\n      //clear fill form data\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.inventoryForm.reset();\n      this.getAllData();\n    }, err => {\n      alert(\"Something went wrong :(\");\n    });\n  }\n  //Get all data\n  getAllData() {\n    this.api.getRestaurant().subscribe(res => {\n      this.allInventoryData = res;\n      this.totalAmount = this.totalPrice();\n      this.totalQuantity = this.getTotalQuantity();\n      // this.totalAmount += this.allInventoryData.amount;\n      // this.allInventoryData.map(t : t.amount).reduce((total, ))\n      // this.totalamount = this.inventory.totalPrice;\n      // this.totalamount = this.api.getTotalAmount();\n    });\n  }\n\n  totalPrice() {\n    return this.allInventoryData.map(t => t.amount).reduce((acc, value) => acc + value, 0);\n  }\n  getTotalQuantity() {\n    return this.allInventoryData.map(t => t.quantity).reduce((acc, value) => acc + value, 0);\n  }\n  /*\n    totalPrice(){\n      this.api.getRestaurant().subscribe(res => {\n        this.totalAmount += this.inventoryModelObj.amount;\n        /*forEach((item: { amount: number; }) => {\n          this.totalAmount += item.amount;\n      });\n      *\n  \n      return this.totalAmount;\n      })\n  \n  \n  }\n  */\n  /*\n    totalAmount(){\n     // this.totalAmount = 0\n      //this.inventoryForm.controls['amount'].setValue(data.amount)\n     /* this.inventoryForm.controls['amount'].get(any =>{\n  \n      })\n      \n     \n      this.Items.forEach(item =>{\n        this.totalAmount += item.amount;\n      })\n    }\n  */\n  //delete records\n  deleteResto(data) {\n    this.api.deleteRestaurant(data.id).subscribe(res => {\n      alert(\"Record Deleted Successfully\");\n      this.getAllData();\n    });\n  }\n  //edit records\n  onEditResto(data) {\n    this.showAdd = false;\n    this.showbtn = true;\n    this.inventoryModelObj.id = data.id;\n    this.inventoryForm.controls['itemName'].setValue(data.itemName);\n    this.inventoryForm.controls['date'].setValue(data.date);\n    this.inventoryForm.controls['amount'].setValue(data.amount);\n    this.inventoryForm.controls['quantity'].setValue(data.quantity);\n  }\n  //update records\n  updateResto() {\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\n    this.inventoryModelObj.date = this.inventoryForm.value.date;\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\n    this.inventoryModelObj.quantity = this.inventoryForm.value.quantity;\n    this.api.updateRestaurant(this.inventoryModelObj, this.inventoryModelObj.id).subscribe(res => {\n      alert(\"Records Updated Successfully :)\");\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.inventoryForm.reset();\n      this.getAllData();\n    });\n  }\n};\nInventoryComponent = __decorate([Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})], InventoryComponent);","map":{"version":3,"names":["Component","InventoryData","InventoryComponent","constructor","FormBuilder","api","inventoryModelObj","totalAmount","totalQuantity","items","ngOnInit","inventoryForm","group","itemName","date","amount","quantity","getAllData","clickAddResto","reset","showAdd","showbtn","addResto","value","postRestaurant","subscribe","res","console","log","alert","ref","document","getElementById","click","err","getRestaurant","allInventoryData","totalPrice","getTotalQuantity","map","t","reduce","acc","deleteResto","data","deleteRestaurant","id","onEditResto","controls","setValue","updateResto","updateRestaurant","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\inventory\\inventory.component.ts"],"sourcesContent":["import { map } from 'rxjs/operators';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { InventoryData } from './inventory.model';\r\nimport { InventoryApiService } from '../inventoryService/inventory-api.service'; \r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent implements OnInit{\r\n  inventoryForm!: FormGroup\r\n  inventoryModelObj: InventoryData = new InventoryData;\r\n  allInventoryData: any;\r\n  totalAmount = 0;\r\n  totalQuantity = 0;\r\n  showAdd!: boolean;\r\n  showbtn!: boolean;\r\n  items:InventoryData[] = [];\r\n\r\n  constructor(private FormBuilder: FormBuilder, private api: InventoryApiService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventoryForm = this.FormBuilder.group({\r\n      itemName: [''],\r\n      date: [''],\r\n      amount: [''],\r\n      quantity: [''],\r\n    })\r\n    this.getAllData();\r\n  }\r\n\r\n  clickAddResto(){\r\n    this.inventoryForm.reset();\r\n    this.showAdd= true;\r\n    this.showbtn= false;\r\n  }\r\n\r\n  //now subscribing our data which is map via services\r\n  addResto() {\r\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\r\n    this.inventoryModelObj.date = this.inventoryForm.value.date;\r\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\r\n    this.inventoryModelObj.quantity = this.inventoryForm.value.quantity;\r\n\r\n    this.api.postRestaurant(this.inventoryModelObj).subscribe(res => {\r\n      console.log(res);\r\n      alert(\"Records Added Successfully :)\");\r\n      //clear fill form data\r\n      let ref = document.getElementById('clear');\r\n      ref?.click();\r\n\r\n      this.inventoryForm.reset();\r\n      this.getAllData();\r\n    },\r\n      err => {\r\n        alert(\"Something went wrong :(\");\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  \r\n\r\n  //Get all data\r\n  getAllData() {\r\n    this.api.getRestaurant().subscribe(res => {\r\n      this.allInventoryData = res;\r\n      this.totalAmount = this.totalPrice();\r\n      this.totalQuantity = this.getTotalQuantity();\r\n     // this.totalAmount += this.allInventoryData.amount;\r\n      \r\n     // this.allInventoryData.map(t : t.amount).reduce((total, ))\r\n     // this.totalamount = this.inventory.totalPrice;\r\n     // this.totalamount = this.api.getTotalAmount();\r\n    })\r\n  }\r\n\r\n  totalPrice(){\r\n    return this.allInventoryData.map((t: { amount: any; }) => t.amount).reduce((acc: any, value: any) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQuantity(){\r\n    return this.allInventoryData.map((t: { quantity: any; }) => t.quantity).reduce((acc: any, value: any ) => acc + value, 0);\r\n  }\r\n/*\r\n  totalPrice(){\r\n    this.api.getRestaurant().subscribe(res => {\r\n      this.totalAmount += this.inventoryModelObj.amount;\r\n      /*forEach((item: { amount: number; }) => {\r\n        this.totalAmount += item.amount;\r\n    });\r\n    *\r\n\r\n    return this.totalAmount;\r\n    })\r\n\r\n\r\n}\r\n*/\r\n/*\r\n  totalAmount(){\r\n   // this.totalAmount = 0\r\n    //this.inventoryForm.controls['amount'].setValue(data.amount)\r\n   /* this.inventoryForm.controls['amount'].get(any =>{\r\n\r\n    })\r\n    \r\n   \r\n    this.Items.forEach(item =>{\r\n      this.totalAmount += item.amount;\r\n    })\r\n  }\r\n*/\r\n  //delete records\r\n  deleteResto(data:any){\r\n    this.api.deleteRestaurant(data.id).subscribe(res => {\r\n      alert(\"Record Deleted Successfully\");\r\n      this.getAllData();\r\n    })\r\n  }\r\n\r\n  //edit records\r\n  onEditResto(data:any){\r\n    this.showAdd= false;\r\n    this.showbtn= true;\r\n    this.inventoryModelObj.id = data.id;\r\n    this.inventoryForm.controls['itemName'].setValue(data.itemName);\r\n    this.inventoryForm.controls['date'].setValue(data.date);\r\n    this.inventoryForm.controls['amount'].setValue(data.amount);\r\n    this.inventoryForm.controls['quantity'].setValue(data.quantity);\r\n  }\r\n\r\n  //update records\r\n  updateResto(){\r\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\r\n    this.inventoryModelObj.date = this.inventoryForm.value.date;\r\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\r\n    this.inventoryModelObj.quantity = this.inventoryForm.value.quantity;\r\n\r\n    this.api.updateRestaurant(this.inventoryModelObj, this.inventoryModelObj.id).subscribe(res=>{\r\n      alert(\"Records Updated Successfully :)\");\r\n      let ref = document.getElementById('clear');\r\n      ref?.click();\r\n\r\n      this.inventoryForm.reset();\r\n      this.getAllData();\r\n    })\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}