{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { InventoryData } from './menu-card.model';\nexport let MenuCardComponent = class MenuCardComponent {\n  constructor(FormBuilder, api) {\n    this.FormBuilder = FormBuilder;\n    this.api = api;\n    this.inventoryModelObj = new InventoryData();\n    this.totalAmount = 0;\n    this.totalQuantity = 0;\n    this.items = [];\n  }\n  ngOnInit() {\n    this.inventoryForm = this.FormBuilder.group({\n      itemName: [''],\n      image: [''],\n      amount: ['']\n    });\n    this.getAllData();\n  }\n  clickAddResto() {\n    this.inventoryForm.reset();\n    this.showAdd = true;\n    this.showbtn = false;\n  }\n  // addResto() {\n  //   this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\n  //   this.inventoryModelObj.amount = this.inventoryForm.value.amount;\n  //   const imageFile = this.inventoryForm.value.image; // Get the image file from the form\n  //   this.api.postRestaurant(this.inventoryModelObj, imageFile).subscribe(\n  //     (res) => {\n  //       console.log(res);\n  //       alert(\"Record Added Successfully :)\");\n  //       this.inventoryForm.reset();\n  //       this.getAllData();\n  //     },\n  //     (err) => {\n  //       alert(\"Something went wrong :(\");\n  //     }\n  //   );\n  // }\n  //now subscribing our data which is map via services\n  addResto() {\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\n    this.inventoryModelObj.image = this.inventoryForm.value.image;\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\n    this.api.postRestaurant(this.inventoryModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Records Added Successfully :)\");\n      //clear fill form data\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.inventoryForm.reset();\n      this.getAllData();\n    }, err => {\n      alert(\"Something went wrong :(\");\n    });\n  }\n  //Get all data\n  getAllData() {\n    this.api.getRestaurant().subscribe(res => {\n      this.allInventoryData = res;\n      this.totalAmount = this.totalPrice();\n      this.totalQuantity = this.getTotalQuantity();\n    });\n  }\n  totalPrice() {\n    return this.allInventoryData.map(t => t.amount).reduce((acc, value) => acc + value, 0);\n  }\n  getTotalQuantity() {\n    return this.allInventoryData.map(t => t.quantity).reduce((acc, value) => acc + value, 0);\n  }\n  //delete records\n  deleteResto(data) {\n    this.api.deleteRestaurant(data.id).subscribe(res => {\n      alert(\"Record Deleted Successfully\");\n      this.getAllData();\n    });\n  }\n  //edit records\n  onEditResto(data) {\n    this.showAdd = false;\n    this.showbtn = true;\n    this.inventoryModelObj.id = data.id;\n    this.inventoryForm.controls['itemName'].setValue(data.itemName);\n    this.inventoryForm.controls['image'].setValue(data.image);\n    this.inventoryForm.controls['amount'].setValue(data.amount);\n  }\n  //update records\n  updateResto() {\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\n    this.inventoryModelObj.image = this.inventoryForm.value.image;\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\n    this.api.updateRestaurant(this.inventoryModelObj, this.inventoryModelObj.id).subscribe(res => {\n      alert(\"Records Updated Successfully :)\");\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.inventoryForm.reset();\n      this.getAllData();\n    });\n  }\n};\nMenuCardComponent = __decorate([Component({\n  selector: 'app-menu-card',\n  templateUrl: './menu-card.component.html',\n  styleUrls: ['./menu-card.component.css']\n})], MenuCardComponent);","map":{"version":3,"names":["Component","InventoryData","MenuCardComponent","constructor","FormBuilder","api","inventoryModelObj","totalAmount","totalQuantity","items","ngOnInit","inventoryForm","group","itemName","image","amount","getAllData","clickAddResto","reset","showAdd","showbtn","addResto","value","postRestaurant","subscribe","res","console","log","alert","ref","document","getElementById","click","err","getRestaurant","allInventoryData","totalPrice","getTotalQuantity","map","t","reduce","acc","quantity","deleteResto","data","deleteRestaurant","id","onEditResto","controls","setValue","updateResto","updateRestaurant","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\menu-card\\menu-card.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport { InventoryData } from './menu-card.model';\r\nimport { MenuListService } from '../MenuService/menu-list.service';\r\n\r\n@Component({\r\n  selector: 'app-menu-card',\r\n  templateUrl: './menu-card.component.html',\r\n  styleUrls: ['./menu-card.component.css']\r\n})\r\nexport class MenuCardComponent implements OnInit{\r\n  inventoryForm!: FormGroup\r\n  inventoryModelObj: InventoryData = new InventoryData;\r\n  allInventoryData: any;\r\n  totalAmount = 0;\r\n  totalQuantity = 0;\r\n  showAdd!: boolean;\r\n  showbtn!: boolean;\r\n  items:InventoryData[] = [];\r\n\r\n  constructor(private FormBuilder: FormBuilder, private api: MenuListService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventoryForm = this.FormBuilder.group({\r\n      itemName: [''],\r\n      image: [''],\r\n      amount: ['']\r\n    })\r\n    this.getAllData();\r\n  }\r\n\r\n  clickAddResto(){\r\n    this.inventoryForm.reset();\r\n    this.showAdd= true;\r\n    this.showbtn= false;\r\n  }\r\n\r\n  // addResto() {\r\n  //   this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\r\n  //   this.inventoryModelObj.amount = this.inventoryForm.value.amount;\r\n  \r\n  //   const imageFile = this.inventoryForm.value.image; // Get the image file from the form\r\n  \r\n  //   this.api.postRestaurant(this.inventoryModelObj, imageFile).subscribe(\r\n  //     (res) => {\r\n  //       console.log(res);\r\n  //       alert(\"Record Added Successfully :)\");\r\n  //       this.inventoryForm.reset();\r\n  //       this.getAllData();\r\n  //     },\r\n  //     (err) => {\r\n  //       alert(\"Something went wrong :(\");\r\n  //     }\r\n  //   );\r\n  // }\r\n  \r\n\r\n  //now subscribing our data which is map via services\r\n  addResto() {\r\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\r\n    this.inventoryModelObj.image = this.inventoryForm.value.image;\r\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\r\n\r\n    this.api.postRestaurant(this.inventoryModelObj).subscribe(res => {\r\n      console.log(res);\r\n      alert(\"Records Added Successfully :)\");\r\n      //clear fill form data\r\n      let ref = document.getElementById('clear');\r\n      ref?.click();\r\n\r\n      this.inventoryForm.reset();\r\n      this.getAllData();\r\n    },\r\n      err => {\r\n        alert(\"Something went wrong :(\");\r\n      }\r\n\r\n    )\r\n  }\r\n\r\n  \r\n\r\n  //Get all data\r\n  getAllData() {\r\n    this.api.getRestaurant().subscribe(res => {\r\n      this.allInventoryData = res;\r\n      this.totalAmount = this.totalPrice();\r\n      this.totalQuantity = this.getTotalQuantity();\r\n     \r\n    })\r\n  }\r\n\r\n  totalPrice(){\r\n    return this.allInventoryData.map((t: { amount: any; }) => t.amount).reduce((acc: any, value: any) => acc + value, 0);\r\n  }\r\n\r\n  getTotalQuantity(){\r\n    return this.allInventoryData.map((t: { quantity: any; }) => t.quantity).reduce((acc: any, value: any ) => acc + value, 0);\r\n  }\r\n\r\n  //delete records\r\n  deleteResto(data:any){\r\n    this.api.deleteRestaurant(data.id).subscribe(res => {\r\n      alert(\"Record Deleted Successfully\");\r\n      this.getAllData();\r\n    })\r\n  }\r\n\r\n  //edit records\r\n  onEditResto(data:any){\r\n    this.showAdd= false;\r\n    this.showbtn= true;\r\n    this.inventoryModelObj.id = data.id;\r\n    this.inventoryForm.controls['itemName'].setValue(data.itemName);\r\n    this.inventoryForm.controls['image'].setValue(data.image);\r\n    this.inventoryForm.controls['amount'].setValue(data.amount);\r\n  }\r\n\r\n  //update records\r\n  updateResto(){\r\n    this.inventoryModelObj.itemName = this.inventoryForm.value.itemName;\r\n    this.inventoryModelObj.image = this.inventoryForm.value.image;\r\n    this.inventoryModelObj.amount = this.inventoryForm.value.amount;\r\n\r\n    this.api.updateRestaurant(this.inventoryModelObj, this.inventoryModelObj.id).subscribe(res=>{\r\n      alert(\"Records Updated Successfully :)\");\r\n      let ref = document.getElementById('clear');\r\n      ref?.click();\r\n\r\n      this.inventoryForm.reset();\r\n      this.getAllData();\r\n    })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}