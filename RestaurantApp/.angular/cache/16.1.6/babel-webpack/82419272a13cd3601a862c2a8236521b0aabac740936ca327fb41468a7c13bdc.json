{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RestaurantDashComponent = class RestaurantDashComponent {\n  constructor(FormBuilder, api) {\n    this.FormBuilder = FormBuilder;\n    this.api = api;\n    this.restaurantModelObj = new RestaurantData();\n  }\n  ngOnInit() {\n    this.formValue = this.FormBuilder.group({\n      name: [''],\n      email: [''],\n      mobile: [''],\n      address: [''],\n      services: [''],\n      salary: ['']\n    });\n    this.getAllData();\n  }\n  clickAddResto() {\n    this.formValue.reset();\n    this.showAdd = true;\n    this.showbtn = false;\n  }\n  //now subscribing our data which is map via services\n  addResto() {\n    this.restaurantModelObj.name = this.formValue.value.name;\n    this.restaurantModelObj.email = this.formValue.value.email;\n    this.restaurantModelObj.mobile = this.formValue.value.mobile;\n    this.restaurantModelObj.address = this.formValue.value.address;\n    this.restaurantModelObj.services = this.formValue.value.services;\n    this.restaurantModelObj.salary = this.formValue.value.salary;\n    this.api.postRestaurant(this.restaurantModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Staff Records Added Successfully :)\");\n      //clear fill form data\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllData();\n    }, err => {\n      alert(\"Something went wrong :(\");\n    });\n  }\n  //Get all data\n  getAllData() {\n    this.api.getRestaurant().subscribe(res => {\n      this.allRestaurantData = res;\n    });\n  }\n  //delete records\n  deleteResto(data) {\n    this.api.deleteRestaurant(data.id).subscribe(res => {\n      alert(\"Record Deleted Successfully\");\n      this.getAllData();\n    });\n  }\n  //edit records\n  onEditResto(data) {\n    this.showAdd = false;\n    this.showbtn = true;\n    this.restaurantModelObj.id = data.id;\n    this.formValue.controls['name'].setValue(data.name);\n    this.formValue.controls['email'].setValue(data.email);\n    this.formValue.controls['mobile'].setValue(data.mobile);\n    this.formValue.controls['address'].setValue(data.address);\n    this.formValue.controls['services'].setValue(data.services);\n    this.formValue.controls['salary'].setValue(data.salary);\n  }\n  //update records\n  updateResto() {\n    this.restaurantModelObj.name = this.formValue.value.name;\n    this.restaurantModelObj.email = this.formValue.value.email;\n    this.restaurantModelObj.mobile = this.formValue.value.mobile;\n    this.restaurantModelObj.address = this.formValue.value.address;\n    this.restaurantModelObj.services = this.formValue.value.services;\n    this.restaurantModelObj.salary = this.formValue.value.salary;\n    this.api.updateRestaurant(this.restaurantModelObj, this.restaurantModelObj.id).subscribe(res => {\n      alert(\"Records Updated Successfully :)\");\n      let ref = document.getElementById('clear');\n      ref?.click();\n      this.formValue.reset();\n      this.getAllData();\n    });\n  }\n};\nRestaurantDashComponent = __decorate([Component({\n  selector: 'app-restaurant-dash',\n  templateUrl: './restaurant-dash.component.html',\n  styleUrls: ['./restaurant-dash.component.css']\n})], RestaurantDashComponent);","map":{"version":3,"names":["Component","RestaurantDashComponent","constructor","FormBuilder","api","restaurantModelObj","RestaurantData","ngOnInit","formValue","group","name","email","mobile","address","services","salary","getAllData","clickAddResto","reset","showAdd","showbtn","addResto","value","postRestaurant","subscribe","res","console","log","alert","ref","document","getElementById","click","err","getRestaurant","allRestaurantData","deleteResto","data","deleteRestaurant","id","onEditResto","controls","setValue","updateResto","updateRestaurant","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\restaurant-dash\\restaurant-dash.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-restaurant-dash',\n  templateUrl: './restaurant-dash.component.html',\n  styleUrls: ['./restaurant-dash.component.css']\n})\nexport class RestaurantDashComponent {\n  formValue!: FormGroup\n  restaurantModelObj: RestaurantData = new RestaurantData;\n  allRestaurantData: any;\n  showAdd!: boolean;\n  showbtn!: boolean;\n\n  constructor(private FormBuilder: FormBuilder, private api: ApiService) { }\n\n  ngOnInit(): void {\n    this.formValue = this.FormBuilder.group({\n      name: [''],\n      email: [''],\n      mobile: [''],\n      address: [''],\n      services: [''],\n      salary: [''],\n    })\n    this.getAllData();\n  }\n\n  clickAddResto(){\n    this.formValue.reset();\n    this.showAdd= true;\n    this.showbtn= false;\n  }\n\n  //now subscribing our data which is map via services\n  addResto() {\n    this.restaurantModelObj.name = this.formValue.value.name;\n    this.restaurantModelObj.email = this.formValue.value.email;\n    this.restaurantModelObj.mobile = this.formValue.value.mobile;\n    this.restaurantModelObj.address = this.formValue.value.address;\n    this.restaurantModelObj.services = this.formValue.value.services;\n    this.restaurantModelObj.salary = this.formValue.value.salary;\n\n    this.api.postRestaurant(this.restaurantModelObj).subscribe(res => {\n      console.log(res);\n      alert(\"Staff Records Added Successfully :)\");\n      //clear fill form data\n      let ref = document.getElementById('clear');\n      ref?.click();\n\n      this.formValue.reset();\n      this.getAllData();\n    },\n      err => {\n        alert(\"Something went wrong :(\");\n      }\n\n    )\n  }\n\n  //Get all data\n  getAllData() {\n    this.api.getRestaurant().subscribe(res => {\n      this.allRestaurantData = res;\n    })\n  }\n\n  //delete records\n  deleteResto(data:any){\n    this.api.deleteRestaurant(data.id).subscribe(res => {\n      alert(\"Record Deleted Successfully\");\n      this.getAllData();\n    })\n  }\n\n  //edit records\n  onEditResto(data:any){\n    this.showAdd= false;\n    this.showbtn= true;\n    this.restaurantModelObj.id = data.id;\n    this.formValue.controls['name'].setValue(data.name);\n    this.formValue.controls['email'].setValue(data.email);\n    this.formValue.controls['mobile'].setValue(data.mobile);\n    this.formValue.controls['address'].setValue(data.address);\n    this.formValue.controls['services'].setValue(data.services);\n    this.formValue.controls['salary'].setValue(data.salary);\n  }\n\n  //update records\n  updateResto(){\n    this.restaurantModelObj.name = this.formValue.value.name;\n    this.restaurantModelObj.email = this.formValue.value.email;\n    this.restaurantModelObj.mobile = this.formValue.value.mobile;\n    this.restaurantModelObj.address = this.formValue.value.address;\n    this.restaurantModelObj.services = this.formValue.value.services;\n    this.restaurantModelObj.salary = this.formValue.value.salary;\n\n    this.api.updateRestaurant(this.restaurantModelObj, this.restaurantModelObj.id).subscribe(res=>{\n      alert(\"Records Updated Successfully :)\");\n      let ref = document.getElementById('clear');\n      ref?.click();\n\n      this.formValue.reset();\n      this.getAllData();\n    })\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}