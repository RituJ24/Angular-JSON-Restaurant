{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../charts-service/chart-data.service\";\nexport class ChartsDashboardComponent {\n  constructor(service) {\n    this.service = service;\n    this.labeldata = [];\n    this.realdata = [];\n    this.colordata = [];\n  }\n  ngOnInit() {\n    this.service.getSalaryChartInfo().subscribe(response => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n  createChart(labeldata, realdata, colordata) {}\n}\nChartsDashboardComponent.ɵfac = function ChartsDashboardComponent_Factory(t) {\n  return new (t || ChartsDashboardComponent)(i0.ɵɵdirectiveInject(i1.ChartDataService));\n};\nChartsDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChartsDashboardComponent,\n  selectors: [[\"app-charts-dashboard\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"chart-container\", 2, \"position\", \"relative\", \"height\", \"60vh\", \"width\", \"120vw\"], [\"id\", \"MyChart\"]],\n  template: function ChartsDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"chart works\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"canvas\", 1);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.chart);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nclass BarChartComponent extends ChartsDashboardComponent {\n  constructor(service) {\n    super(service);\n    this.service = service;\n  }\n  createChart(labeldata, realdata, colordata) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar',\n      data: {\n        labels: labeldata,\n        datasets: [{\n          label: 'No of sales',\n          data: realdata,\n          backgroundColor: colordata,\n          barThickness: 40\n        }]\n      },\n      options: {\n        aspectRatio: 2\n      }\n    });\n  }\n}","map":{"version":3,"names":["Chart","ChartsDashboardComponent","constructor","service","labeldata","realdata","colordata","ngOnInit","getSalaryChartInfo","subscribe","response","chartInfo","i","length","push","services","salary","colorcode","createChart","i0","ɵɵdirectiveInject","i1","ChartDataService","selectors","decls","vars","consts","template","ChartsDashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","chart","BarChartComponent","type","data","labels","datasets","label","backgroundColor","barThickness","options","aspectRatio"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\charts-dashboard\\charts-dashboard.component.ts","E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\charts-dashboard\\charts-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartDataService } from '../charts-service/chart-data.service';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-charts-dashboard',\n  templateUrl: './charts-dashboard.component.html',\n  styleUrls: ['./charts-dashboard.component.css'],\n})\nexport class ChartsDashboardComponent implements OnInit {\n  public chart: any;\n  public chartInfo: any;\n  public labeldata: any[] = [];\n  public realdata: any[] = [];\n  public colordata: any[] = [];\n\n  constructor(public service: ChartDataService) {}\n\n  ngOnInit(): void {\n    this.service.getSalaryChartInfo().subscribe((response) => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n\n  createChart(labeldata: any, realdata: any, colordata: any) {}\n}\n\nclass BarChartComponent extends ChartsDashboardComponent {\n  public constructor(public override service: ChartDataService) {\n    super(service);\n  }\n\n  override createChart(labeldata: any, realdata: any, colordata: any) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar', //this denotes the type of chart\n      data: {\n        labels: labeldata, //x axis\n        datasets: [\n          {\n            label: 'No of sales',\n            data: realdata,\n            backgroundColor: colordata,\n            barThickness: 40,\n          },\n        ],\n      },\n      options: {\n        aspectRatio: 2,\n      },\n    });\n  }\n}\n","<p>chart works</p>\n<div class=\"chart-container\" style=\"position: relative; height:60vh; width:120vw\">\n    <canvas id=\"MyChart\">{{chart}}</canvas>\n</div>"],"mappings":"AAEA,OAAOA,KAAK,MAAM,eAAe;;;AAOjC,OAAM,MAAOC,wBAAwB;EAOnCC,YAAmBC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;IAJnB,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,SAAS,GAAU,EAAE;EAEmB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,kBAAkB,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACC,SAAS,GAAGD,QAAQ;MACzB,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;QAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,SAAS,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAI,CAACR,SAAS,CAACU,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACG,QAAQ,CAAC;UAC/C,IAAI,CAACV,QAAQ,CAACS,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC;UAC5C,IAAI,CAACV,SAAS,CAACQ,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACK,SAAS,CAAC;;QAElD,IAAI,CAACC,WAAW,CAAC,IAAI,CAACd,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,SAAS,CAAC;;IAEnE,CAAC,CAAC;EACJ;EAEAY,WAAWA,CAACd,SAAc,EAAEC,QAAa,EAAEC,SAAc,GAAG;;AAvBjDL,wBAAwB,C;mBAAxBA,wBAAwB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;AAAxBrB,wBAAwB,C;QAAxBA,wBAAwB;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTrCV,EAAA,CAAAY,cAAA,QAAG;MAAAZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAI;MAClBd,EAAA,CAAAY,cAAA,aAAkF;MACzDZ,EAAA,CAAAa,MAAA,GAAS;MAAAb,EAAA,CAAAc,YAAA,EAAS;;;MAAlBd,EAAA,CAAAe,SAAA,GAAS;MAATf,EAAA,CAAAgB,iBAAA,CAAAL,GAAA,CAAAM,KAAA,CAAS;;;;;ADiClC,MAAMC,iBAAkB,SAAQpC,wBAAwB;EACtDC,YAAmCC,OAAyB;IAC1D,KAAK,CAACA,OAAO,CAAC;IADmB,KAAAA,OAAO,GAAPA,OAAO;EAE1C;EAESe,WAAWA,CAACd,SAAc,EAAEC,QAAa,EAAEC,SAAc;IAChE,IAAI,CAAC8B,KAAK,GAAG,IAAIpC,KAAK,CAAC,SAAS,EAAE;MAChCsC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAEpC,SAAS;QACjBqC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,aAAa;UACpBH,IAAI,EAAElC,QAAQ;UACdsC,eAAe,EAAErC,SAAS;UAC1BsC,YAAY,EAAE;SACf;OAEJ;MACDC,OAAO,EAAE;QACPC,WAAW,EAAE;;KAEhB,CAAC;EACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}