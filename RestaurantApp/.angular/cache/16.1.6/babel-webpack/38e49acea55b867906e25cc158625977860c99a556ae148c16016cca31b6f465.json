{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport Chart from 'chart.js/auto';\nexport let ChartsDashboardComponent = class ChartsDashboardComponent {\n  constructor(service) {\n    this.service = service;\n    this.labeldata = [];\n    this.realdata = [];\n    this.colordata = [];\n  }\n  ngOnInit() {\n    this.service.getSalaryChartInfo().subscribe(response => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n  createChart(labeldata, realdata, colordata) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar',\n      data: {\n        labels: labeldata,\n        datasets: [{\n          label: 'No of sales',\n          data: realdata,\n          backgroundColor: colordata,\n          barThickness: 40\n        }]\n      },\n      options: {\n        aspectRatio: 2\n      }\n    });\n  }\n};\nChartsDashboardComponent = __decorate([Component({\n  selector: 'app-charts-dashboard',\n  templateUrl: './charts-dashboard.component.html',\n  styleUrls: ['./charts-dashboard.component.css']\n})], ChartsDashboardComponent);\n//   ngOnInit(): void {\n//     this.service.getSalaryChartInfo().subscribe((response) => {\n//       this.chartInfo = response;\n//       if (this.chartInfo != null) {\n//         for (let i = 0; i < this.chartInfo.length; i++) {\n//           this.labeldata.push(this.chartInfo[i].services);\n//           this.realdata.push(this.chartInfo[i].salary);\n//           this.colordata.push(this.chartInfo[i].colorcode);\n//         }\n//         this.createChart(this.labeldata, this.realdata, this.colordata);\n//       }\n//     });\n//   }\n//   createChart(labeldata: any, realdata: any, colordata: any) {}\n// }\n// class BarChartComponent extends ChartsDashboardComponent {\n//   public constructor(public override service: ChartDataService) {\n//     super(service);\n//   }\n//   override createChart(labeldata: any, realdata: any, colordata: any) {\n//     this.chart = new Chart('MyChart', {\n//       type: 'bar', //this denotes the type of chart\n//       data: {\n//         labels: labeldata, //x axis\n//         datasets: [\n//           {\n//             label: 'No of sales',\n//             data: realdata,\n//             backgroundColor: colordata,\n//             barThickness: 40,\n//           },\n//         ],\n//       },\n//       options: {\n//         aspectRatio: 2,\n//       },\n//     });\n//   }\n// }","map":{"version":3,"names":["Component","Chart","ChartsDashboardComponent","constructor","service","labeldata","realdata","colordata","ngOnInit","getSalaryChartInfo","subscribe","response","chartInfo","i","length","push","services","salary","colorcode","createChart","chart","type","data","labels","datasets","label","backgroundColor","barThickness","options","aspectRatio","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\charts-dashboard\\charts-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartDataService } from '../charts-service/chart-data.service';\nimport Chart from 'chart.js/auto';\n\n@Component({\n  selector: 'app-charts-dashboard',\n  templateUrl: './charts-dashboard.component.html',\n  styleUrls: ['./charts-dashboard.component.css'],\n})\nexport class ChartsDashboardComponent implements OnInit {\n  public chart: any;\n  public chartInfo: any;\n  public labeldata: any[] = [];\n  public realdata: any[] = [];\n  public colordata: any[] = [];\n\n  constructor(public service: ChartDataService) {}\n\n  ngOnInit(): void {\n    this.service.getSalaryChartInfo().subscribe((response) => {\n      this.chartInfo = response;\n      if (this.chartInfo != null) {\n        for (let i = 0; i < this.chartInfo.length; i++) {\n          this.labeldata.push(this.chartInfo[i].services);\n          this.realdata.push(this.chartInfo[i].salary);\n          this.colordata.push(this.chartInfo[i].colorcode);\n        }\n        this.createChart(this.labeldata, this.realdata, this.colordata);\n      }\n    });\n  }\n\n  createChart(labeldata: any, realdata: any, colordata: any) {\n    this.chart = new Chart('MyChart', {\n      type: 'bar', // this denotes the type of chart\n      data: {\n        labels: labeldata, // x-axis\n        datasets: [\n          {\n            label: 'No of sales',\n            data: realdata,\n            backgroundColor: colordata,\n            barThickness: 40,\n          },\n        ],\n      },\n      options: {\n        aspectRatio: 2,\n      },\n    });\n  }\n}\n\n//   ngOnInit(): void {\n//     this.service.getSalaryChartInfo().subscribe((response) => {\n//       this.chartInfo = response;\n//       if (this.chartInfo != null) {\n//         for (let i = 0; i < this.chartInfo.length; i++) {\n//           this.labeldata.push(this.chartInfo[i].services);\n//           this.realdata.push(this.chartInfo[i].salary);\n//           this.colordata.push(this.chartInfo[i].colorcode);\n//         }\n//         this.createChart(this.labeldata, this.realdata, this.colordata);\n//       }\n//     });\n//   }\n\n//   createChart(labeldata: any, realdata: any, colordata: any) {}\n// }\n\n// class BarChartComponent extends ChartsDashboardComponent {\n//   public constructor(public override service: ChartDataService) {\n//     super(service);\n//   }\n\n//   override createChart(labeldata: any, realdata: any, colordata: any) {\n//     this.chart = new Chart('MyChart', {\n//       type: 'bar', //this denotes the type of chart\n//       data: {\n//         labels: labeldata, //x axis\n//         datasets: [\n//           {\n//             label: 'No of sales',\n//             data: realdata,\n//             backgroundColor: colordata,\n//             barThickness: 40,\n//           },\n//         ],\n//       },\n//       options: {\n//         aspectRatio: 2,\n//       },\n//     });\n//   }\n// }\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,OAAOC,KAAK,MAAM,eAAe;AAO1B,WAAMC,wBAAwB,GAA9B,MAAMA,wBAAwB;EAOnCC,YAAmBC,OAAyB;IAAzB,KAAAA,OAAO,GAAPA,OAAO;IAJnB,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,SAAS,GAAU,EAAE;EAEmB;EAE/CC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,kBAAkB,EAAE,CAACC,SAAS,CAAEC,QAAQ,IAAI;MACvD,IAAI,CAACC,SAAS,GAAGD,QAAQ;MACzB,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,EAAE;QAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACD,SAAS,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,IAAI,CAACR,SAAS,CAACU,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACG,QAAQ,CAAC;UAC/C,IAAI,CAACV,QAAQ,CAACS,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACI,MAAM,CAAC;UAC5C,IAAI,CAACV,SAAS,CAACQ,IAAI,CAAC,IAAI,CAACH,SAAS,CAACC,CAAC,CAAC,CAACK,SAAS,CAAC;;QAElD,IAAI,CAACC,WAAW,CAAC,IAAI,CAACd,SAAS,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,SAAS,CAAC;;IAEnE,CAAC,CAAC;EACJ;EAEAY,WAAWA,CAACd,SAAc,EAAEC,QAAa,EAAEC,SAAc;IACvD,IAAI,CAACa,KAAK,GAAG,IAAInB,KAAK,CAAC,SAAS,EAAE;MAChCoB,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;QACJC,MAAM,EAAElB,SAAS;QACjBmB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,aAAa;UACpBH,IAAI,EAAEhB,QAAQ;UACdoB,eAAe,EAAEnB,SAAS;UAC1BoB,YAAY,EAAE;SACf;OAEJ;MACDC,OAAO,EAAE;QACPC,WAAW,EAAE;;KAEhB,CAAC;EACJ;CACD;AA1CY3B,wBAAwB,GAAA4B,UAAA,EALpC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACW/B,wBAAwB,CA0CpC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}