{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(formBuilder, _http, router) {\n    this.formBuilder = formBuilder;\n    this._http = _http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: ['']\n    });\n  }\n  //login method\n  logIn() {\n    this._http.get('http://localhost:3000/signup').subscribe(res => {\n      const user = res.find(a => {\n        return a.email == this.loginForm.value.email && a.password == this.loginForm.value.password;\n      });\n      if (user) {\n        alert('Login successful');\n        this.loginForm.reset();\n        this.router.navigate(['/restaurant']);\n      } else {\n        alert('USer not found :( ');\n      }\n    }, err => {\n      alert(\"Something's wrong from the server side\");\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"placeholder\", \"Enter Email Address\", \"formControlName\", \"email\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"placeholder\", \"Enter Password\", \"formControlName\", \"password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/signup\", 2, \"color\", \"blue\", \"margin-top\", \"10px\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Restaurant Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h5\");\n      i0.ɵɵtext(8, \"Please Login with your credentials\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"hr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.logIn();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵtext(16, \" We'll never share your email with anyone else. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 12);\n      i0.ɵɵtext(22, \" Login \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"a\", 13);\n      i0.ɵɵtext(24, \" New User? Click to Signup!\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  border: 1px solid black;\\n  width: 550px;\\n  padding: 45px;\\n  position: absolute;\\n  top: 10%;\\n  left: 30%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsWUFBWTtFQUNaLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFNBQVM7QUFDWCIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIHdpZHRoOiA1NTBweDtcclxuICBwYWRkaW5nOiA0NXB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDEwJTtcclxuICBsZWZ0OiAzMCU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","formBuilder","_http","router","ngOnInit","loginForm","group","email","password","logIn","get","subscribe","res","user","find","a","value","alert","reset","navigate","err","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_form_ngSubmit_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\login\\login.component.ts","E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: [''],\n      password: [''],\n    });\n  }\n\n  //login method\n  logIn() {\n    this._http.get<any>('http://localhost:3000/signup').subscribe(\n      (res) => {\n        const user = res.find((a: any) => {\n          return (\n            a.email == this.loginForm.value.email &&\n            a.password == this.loginForm.value.password\n          );\n        });\n        if (user) {\n          alert('Login successful');\n          this.loginForm.reset();\n          this.router.navigate(['/restaurant']);\n        } else {\n          alert('USer not found :( ');\n        }\n      },\n      (err) => {\n        alert(\"Something's wrong from the server side\");\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"text-center\">\n          <h1>Restaurant Login</h1>\n          <h5>Please Login with your credentials</h5>\n          <hr />\n        </div>\n\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"logIn()\">\n          <div class=\"mb-3\">\n            <label for=\"exampleInputEmail1\" class=\"form-label\"\n              >Email address</label\n            >\n            <input\n              placeholder=\"Enter Email Address\"\n              formControlName=\"email\"\n              type=\"email\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n            />\n            <div id=\"emailHelp\" class=\"form-text\">\n              We'll never share your email with anyone else.\n            </div>\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"exampleInputPassword1\" class=\"form-label\"\n              >Password</label\n            >\n            <input\n              placeholder=\"Enter Password\"\n              formControlName=\"password\"\n              type=\"password\"\n              class=\"form-control\"\n              id=\"exampleInputPassword1\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            \n            class=\"btn btn-primary\"\n          >\n            Login\n          </button>\n        </form>\n\n        <a style=\"color: blue; margin-top: 10px\" routerLink=\"/signup\">\n          New User? Click to Signup!</a\n        >\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}