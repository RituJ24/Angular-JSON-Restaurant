{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class SignupComponent {\n  constructor(formBuilder, _http, router) {\n    this.formBuilder = formBuilder;\n    this._http = _http;\n    this.router = router;\n  }\n  ngOnInit() {\n    /*this.signupForm = this.formBuilder.group({\n      name: [''],\n      email: [''],\n      mobile: [''],\n      password: [''],\n    })*/\n    this.signupForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      mobile: ['', Validators.required],\n      password: ['', Validators.required] // Make fields required\n    });\n  }\n  //method for user signup\n  /*signUp() {\n    this._http\n      .post<any>(\"http://localhost:3000/signup\", this.signupForm.value)\n      .subscribe(\n        (res) => {\n          alert(\"Signup successfull!\");\n          this.signupForm.reset();\n          this.router.navigate(['login']);\n        },\n        err => {\n          alert(\"Something's wrong :/ Please re check your entered data\")\n        }\n      )\n  }*/\n  // Method for user signup\n  signUp() {\n    if (this.signupForm.valid) {\n      this._http.post('http://localhost:3000/signup', this.signupForm.value).subscribe(res => {\n        alert('Signup successful!');\n        this.signupForm.reset();\n        this.router.navigate(['login']);\n      }, err => {\n        alert(\"Something's wrong :/ Please re-check your entered data\");\n      });\n    } else {\n      alert('Please fill in all required fields correctly.');\n    }\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"formControlName\", \"name\", \"placeholder\", \"Enter name\", \"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"mobile\", \"placeholder\", \"Enter mobile number\", \"type\", \"number\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"email\", \"placeholder\", \"Enter email address\", \"type\", \"email\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"required\", \"\", 1, \"form-control\"], [\"formControlName\", \"password\", \"placeholder\", \"Enter password\", \"type\", \"password\", \"id\", \"exampleInputPassword1\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"routerLink\", \"/login\", 1, \"text\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\");\n      i0.ɵɵtext(6, \"Restaurant Signup\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h5\");\n      i0.ɵɵtext(8, \"Please Signup First\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"hr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_10_listener() {\n        return ctx.signUp();\n      });\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Mobile Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 7);\n      i0.ɵɵtext(21, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 7);\n      i0.ɵɵtext(25, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 12);\n      i0.ɵɵtext(28, \"SignUp\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"a\", 13);\n      i0.ɵɵtext(30, \" Already a User? Click to Login!\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n    }\n  },\n  styles: [\".card[_ngcontent-%COMP%] {\\n  margin-top: -25px;\\n  border: 1px solid black;\\n  width: 550px;\\n  padding: 45px;\\n  position: absolute;\\n  top: 10%;\\n  left: 30%;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  margin-left: 40%;\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n  margin-left: 25%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gIG1hcmdpbi10b3A6IC0yNXB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIHdpZHRoOiA1NTBweDtcclxuICBwYWRkaW5nOiA0NXB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDEwJTtcclxuICBsZWZ0OiAzMCU7XHJcbn1cclxuXHJcbi5idG4ge1xyXG4gIG1hcmdpbi1sZWZ0OiA0MCU7XHJcbn1cclxuXHJcbi50ZXh0IHtcclxuICBtYXJnaW4tbGVmdDogMjUlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","SignupComponent","constructor","formBuilder","_http","router","ngOnInit","signupForm","group","name","required","email","mobile","password","signUp","valid","post","value","subscribe","res","alert","reset","navigate","err","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SignupComponent_Template_form_ngSubmit_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\signup\\signup.component.ts","E:\\Tanisha\\Projects\\Summer term\\Restaurant\\RestaurantApp\\src\\app\\signup\\signup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http'; //incompatible\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  signupForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private _http: HttpClient,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    /*this.signupForm = this.formBuilder.group({\n      name: [''],\n      email: [''],\n      mobile: [''],\n      password: [''],\n    })*/\n\n    this.signupForm = this.formBuilder.group({\n      name: ['', Validators.required], // Make fields required\n      email: ['', [Validators.required, Validators.email]], // Add email validation\n      mobile: ['', Validators.required], // Make fields required\n      password: ['', Validators.required], // Make fields required\n    });\n  }\n\n  //method for user signup\n  /*signUp() {\n    this._http\n      .post<any>(\"http://localhost:3000/signup\", this.signupForm.value)\n      .subscribe(\n        (res) => {\n          alert(\"Signup successfull!\");\n          this.signupForm.reset();\n          this.router.navigate(['login']);\n        },\n        err => {\n          alert(\"Something's wrong :/ Please re check your entered data\")\n        }\n      )\n  }*/\n\n  // Method for user signup\n  signUp() {\n    if (this.signupForm.valid) {\n      this._http\n        .post<any>('http://localhost:3000/signup', this.signupForm.value)\n        .subscribe(\n          (res) => {\n            alert('Signup successful!');\n            this.signupForm.reset();\n            this.router.navigate(['login']);\n          },\n          (err) => {\n            alert(\"Something's wrong :/ Please re-check your entered data\");\n          }\n        );\n    } else {\n      alert('Please fill in all required fields correctly.');\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"text-center\">\n          <h1>Restaurant Signup</h1>\n          <h5>Please Signup First</h5>\n          <hr />\n        </div>\n\n        <form [formGroup]=\"signupForm\" (ngSubmit)=\"signUp()\">\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Name</label>\n            <input\n              formControlName=\"name\"\n              placeholder=\"Enter name\"\n              type=\"text\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Mobile Number</label>\n            <input\n              formControlName=\"mobile\"\n              placeholder=\"Enter mobile number\"\n              type=\"number\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Email address</label>\n            <input\n              formControlName=\"email\"\n              placeholder=\"Enter email address\"\n              type=\"email\"\n              class=\"form-control\"\n              id=\"exampleInputEmail1\"\n              aria-describedby=\"emailHelp\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label class=\"form-label\">Password</label>\n            <input\n              formControlName=\"password\"\n              placeholder=\"Enter password\"\n              type=\"password\"\n              class=\"form-control\"\n              id=\"exampleInputPassword1\"\n              required\n            />\n          </div>\n\n          <button type=\"submit\" class=\"btn btn-primary\">SignUp</button>\n        </form>\n        <a class=\"text\" routerLink=\"/login\"> Already a User? Click to Login!</a>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}